Case Study: https://8weeksqlchallenge.com/case-study-1/

/* --------------------
   Case Study Questions
   --------------------*/


-- 1. What is the total amount each customer spent at the restaurant?
select customer_id, sum(price) as price
from sales s
join menu m on m.product_id = s.product_id
group by customer_id;


-- 2. How many days has each customer visited the restaurant?
select customer_id, count(distinct(order_date)) as visits
from sales s
join menu m on m.product_id = s.product_id
group by customer_id;


-- 3. What was the first item from the menu purchased by each customer?
With cte as
(
  select s.customer_id, s.order_date, m.product_name,
  dense_rank() over(partition by s.customer_id order by s.order_date) as first_order
  from sales as s
  join menu as m on s.product_id=m.product_id
  group by 1,2,3
)
Select customer_id, product_name
from cte
where first_order=1;


-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
select m.product_name, count(s.product_id) as most_purchased
from sales s
join menu m on m.product_id=s.product_id
group by m.product_name
order by most_purchased desc limit 1;


-- 5. Which item was the most popular for each customer?
with fav_item_cte as
(select customer_id, product_name, count(s.product_id) as product_count,
 dense_rank() over (partition by customer_id 
                    order by count(customer_id) desc) as rank
from sales s
join menu m on m.product_id=s.product_id
group by customer_id, product_name
)

select customer_id, product_name, product_count
from fav_item_cte
where rank=1;


-- 6. Which item was purchased first by the customer after they became a member?
with members_cte as
(
  select mem.customer_id, mem.join_date, s.order_date, m.product_name,
  dense_rank() over(partition by mem.customer_id order by s.order_date) as rank
  from members mem
  join sales s on mem.customer_id=s.customer_id
  join menu m on m.product_id=s.product_id
  where s.order_date >= mem.join_date
)
select customer_id, order_date, product_name
from members_cte
where rank=1;


-- 7. Which item was purchased just before the customer became a member?
with cte as
(
  select s.customer_id, m.product_name,
  dense_rank() over(partition by s.customer_id order by s.order_date desc) as ordered_on
  from sales as s
  join menu as m
  on s.product_id=m.product_id
  join members as mem
  on s.customer_id=mem.customer_id
  where mem.join_date > s.order_date
)
select customer_id, product_name
from cte
where ordered_on=1;

-- 8. What is the total items and amount spent for each member before they became a member?
select s.customer_id, count(s.product_id) as total_items, sum(m.price) as amount_spent
from sales as s
join menu as m
on s.product_id=m.product_id
join members as mem
on s.customer_id=mem.customer_id
where mem.join_date>s.order_date
group by 1;


-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
with price_points as
(
  select *,
  CASE
  	WHEN product_id=1 then price*20
 	else price*10
  END as points
  from menu
)
select s.customer_id, sum(p.points) as total_points
from price_points p
join sales s on s.product_id=p.product_id
group by s.customer_id;


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
with cte as
(
  select *, join_date+interval '6 day' as valid_date,
  date('2021-01-31') as last_date
  from members
)
select s.customer_id, SUM(
  case 
  when m.product_id=1 then m.price*20
  when s.order_date between c.join_date and c.valid_date then m.price*20
  else m.price*10
  end
) as points
from cte as c
join sales as s
on s.customer_id = c.customer_id
join menu as m
on m.product_id = s.product_id
where s.order_date<c.last_date
group by 1;
